import logging
import re

from database.collection import find_user, update_full_name, update_company_name, update_company_site
from modules.bot_states import Menu, ProfileEdit

from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

logging.basicConfig(level=logging.INFO)


async def profile_handler(callback: types.CallbackQuery, state: FSMContext):
    await state.set_state(Menu.profile)
    user = find_user(callback.message.chat.id)

    edit = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='edit_profile')
    back = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='menu')
    edit.add(button)
    edit.add(back)

    await callback.message.edit_text(f"üìã –í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n"
                                     f"üë®‚Äçüíº  –§–ò–û: {user['full_name']}\n"
                                     f"üìû  –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user['phone_number']}\n"
                                     f"üè¢  –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {user['company_name']}\n"
                                     f"üì∞  –°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏: <a href='{user['company_site']}'>*–ø–µ—Ä–µ–π—Ç–∏*</a>\n",
                                     parse_mode='HTML', reply_markup=edit, disable_web_page_preview=True)


async def edit_profile_handler(callback: types.CallbackQuery, state: FSMContext):
    edit = InlineKeyboardMarkup(row_width=1)
    full_name = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û', callback_data='edit_full_name')
    company_name = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏', callback_data='edit_company_name')
    company_site = InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏', callback_data='edit_company_site')
    back = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='menu')
    edit.add(full_name, company_name, company_site, back)

    await callback.message.edit_reply_markup(reply_markup=edit)


async def edit_full_name_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –§–ò–û:")
    await ProfileEdit.full_name.set()


async def edit_full_name(message: types.Message, state: FSMContext):
    pattern = r"^[–ê-–Ø][–∞-—è]+\s[–ê-–Ø][–∞-—è]+\s[–ê-–Ø][–∞-—è]+$"
    if not re.match(pattern, message.text):
        await message.answer('–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –§–ò–û.\n –ü—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á')
        await ProfileEdit.full_name.set()
        return
    update_full_name(message.from_user.id, message.text)
    await state.set_state(Menu.profile)
    user = find_user(message.from_user.id)

    edit = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='edit_profile')
    back = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='menu')
    edit.add(button)
    edit.add(back)

    await message.answer(f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n"
                         f" –§–ò–û: {user['full_name']}\n"
                         f" –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user['phone_number']}\n"
                         f" –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {user['company_name']}\n"
                         f" –°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏: <a href='{user['company_site']}'>*–∫–ª–∏–∫*</a>\n",
                         parse_mode='HTML', reply_markup=edit, disable_web_page_preview=True)


async def edit_company_name_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏:")
    await ProfileEdit.company_name.set()


async def edit_company_name(message: types.Message, state: FSMContext):
    update_company_name(message.from_user.id, message.text)
    await state.set_state(Menu.profile)
    user = find_user(message.from_user.id)

    edit = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='edit_profile')
    back = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='menu')
    edit.add(button)
    edit.add(back)

    await message.answer(f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n"
                         f" –§–ò–û: {user['full_name']}\n"
                         f" –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user['phone_number']}\n"
                         f" –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {user['company_name']}\n"
                         f" –°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏: <a href='{user['company_site']}'>*–ø–µ—Ä–µ–π—Ç–∏*</a>\n",
                         parse_mode='HTML', reply_markup=edit, disable_web_page_preview=True)


async def edit_company_site_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.message.edit_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç:")
    await ProfileEdit.company_site.set()


async def edit_company_site(message: types.Message, state: FSMContext):
    url_pattern = r'http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+'
    if not re.match(url_pattern, message.text):
        await message.answer('–í—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É, –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å http:// –∏–ª–∏ https://.')
        await ProfileEdit.company_site.set()
        return
    update_company_site(message.from_user.id, message.text)
    await state.set_state(Menu.profile)
    user = find_user(message.from_user.id)

    edit = InlineKeyboardMarkup()
    button = InlineKeyboardButton(text='–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data='edit_profile')
    back = InlineKeyboardButton(text='–í –º–µ–Ω—é', callback_data='menu')
    edit.add(button)
    edit.add(back)

    await message.answer(f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞:\n"
                         f" –§–ò–û: {user['full_name']}\n"
                         f" –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {user['phone_number']}\n"
                         f" –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {user['company_name']}\n"
                         f" –°–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏: <a href='{user['company_site']}'>*–ø–µ—Ä–µ–π—Ç–∏*</a>\n",
                         parse_mode='HTML', reply_markup=edit, disable_web_page_preview=True)
